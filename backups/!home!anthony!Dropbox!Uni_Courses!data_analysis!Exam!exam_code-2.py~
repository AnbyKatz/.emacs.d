#!/usr/bin/python3.5

import matplotlib.pyplot as pypl
import numpy as np
import math as m
from scipy.integrate import quad
from matplotlib import rc
from pylab import*
from sympy import*

# Fourier Analysis of data
# Data
data = genfromtxt("exam_data.csv",delimiter=',')
titles = ["sea level power","water temp power",
          "air temp power","bar pressure power",
          "residuals power", "adj residuals power",
          "wind direction power","wind gust power",
          "wind speed power"]

N = 2**14
fs = 24
N_avg = 16
fft_input = linspace(0,1,int(N/N_avg))
fft_input[:] = 0

for ii in range(0,1):
    raw_data = data[:,ii]
    for jj in range(0,N_avg):
        input_data = raw_data[jj:N:N_avg]
        fft_input=fft_input+np.fft.fft(input_data)
        
    fft_input = fft_input/N_avg
    L = len(fft_input)

    # time axis
    # each interval on the time axis represents 1 hour    
    f = (fs*np.linspace(0,L-1,L))/L
    input_power=(np.square(np.absolute(fft_input)))/(L**2)

    pypl.loglog(f,input_power)
    pypl.xlabel("time")
    pypl.ylabel(titles[ii])
    pypl.grid()
    pypl.plot((1/27.3,1/27.3),(-100,10**9))
    pypl.plot((fs/2,fs/2),(-100,10**9))
    pypl.show()
    
