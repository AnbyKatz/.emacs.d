% Choose pra, prb, prc, prd, pre, prl, prstab, prstper, or rmp for journal
%  Add 'draft' option to mark overfull boxes with black boxes
%  Add 'showpacs' option to make PACS codes appear
%  Add 'showkeys' option to make keywords appear

\documentclass[aps,prl,twocolumn]{revtex4-1}

\usepackage{amsmath,amssymb}
\usepackage{physics}
\usepackage{slashed}
\usepackage{mypackage}
\usepackage{blindtext}
\usepackage{listings}
\usepackage{color}
\usepackage{graphicx}
\usepackage{float}
\usepackage{hyperref}

\definecolor{mygreen}{RGB}{28,172,0} 
\definecolor{mylilas}{RGB}{170,55,241}

\begin{document}

\lstset{language=Matlab,
    %basicstyle=\color{red},
    breaklines=true,
    morekeywords={matlab2tikz},
    keywordstyle=\color{blue},
    morekeywords=[2]{1}, keywordstyle=[2]{\color{black}},
    identifierstyle=\color{black},
    stringstyle=\color{mylilas},
    commentstyle=\color{mygreen},
    showstringspaces=false,
    %numbers=left,
    %numberstyle={\tiny \color{black}},
    %numbersep=9pt, 
    emph=[1]{for,end,break},emphstyle=[1]\color{red},
    %emph=[2]{word1,word2}, emphstyle=[2]{style},    
}

\title{Fourier Techniques Assignment 3}
\author{Anthony Kalaitzis}
\date{\today}
\maketitle

\section{Introduction}

The following report details calculating the power spectra for a ball with a given driving frequency. We will analyze the effects of averaging over a collection of copies of the system and applying windows to the data. These steps will allow us to discuss the effects of noise on our system produced via the Fourier transform and other artifacts such as leakage.

\section{Finding the Power Spectra}

We start by loading our data into Matlab for manipulation , where the first column represents the driving frequency (after Fourier transform) that we will use to create the frequency axis. The second column of data being the height of the ball.

\lstinputlisting{Q1.m}

Before Fourier transforming our data, it is important to truncate to $2^n$ data points where $n\inN$. We have 70000 data points so the greatest power of 2 which is less then the total number of data points is $2^{16}=65536$. Hence we may simply read off the first $2^{16}$ points to truncate our data like so. This is due to Matlab's algorithms creating zeros in the data to force the dimension to be a power of 2.

\lstinputlisting{Q6.m}

Using Matlab's inbuilt discrete Fourier transform function on our data returns the Fourier transform of the data. We then simply calculate the absolute value of both Fourier transforms to get the power values for both.

\lstinputlisting{Q2.m}

This gives us our power values for the y axis but we still wish for a properly calculated x axis. We construct this x axis based of the Fourier transform of the driver data which represents a 145Hz sine wave. Since this is the Fourier transform of a sine wave of 145Hz, we expect a peak at 145Hz.

We may observe these peaks clearly by simply plotting the power spectra data directly on a log plot. In this case we don't add an x axis so Matlab will simply make the x axis the index set of natural numbers. This gives us the FIG. \ref{fig1}

\begin{figure}
    \includegraphics[width=\columnwidth]{1}
    \caption{Driver Power Spectra}
    \label{fig1}
\end{figure}
  
Suppose $i$ represents the index labelling where the Fourier transformed driver obtains its maximum value. We can then find the sampling frequency $f_s$ by the formula
\begin{align*}
  f_s=\frac{f}{i}N
\end{align*}
where $f$ is the frequency and $N$ the number of data points. This will scale our data space to produce a properly calibrated x axis. Next create a Space of points equal in length to the number of data points and centred at 0 i.e. from $-N/2$ to $N/2-1$. This can be done in Matlab like so

\lstinputlisting{Q3.m}

We may use this frequency axis and plot it against our previously calculated power values for both columns. It is important though to use Matlab's \texttt{fftshift} function to ensure the negative values of the Fourier transform don't contaminate the output. This produces FIG \ref{fig2}

\begin{figure}
    \includegraphics[width=\columnwidth]{2}
    \caption{Ball Power Spectra for no window}
    \label{fig2}
\end{figure}

The code used to display this plot is provided below

\lstinputlisting{Q4.m}

One extra detail we have calculated and displayed as a vertical line on the plot is the nyquist frequency which tells us that any frequencies sampled that are greater then the nyquist frequency will be aliased. This feature will also be shown in later plots. To calculate the nyquist frequency we simply use the formula that

\begin{align*}
  f_N=\frac{f_s}{2}
\end{align*}

where $f_s$ is the sampling frequency previously discussed. We can see on our plot that we indeed do not sample any frequencies past the nyquist frequency so no aliasing will occur due to overlaying peaks but some aliasing may still occur due to noise and other factors which will be discussed later.

\section{Averaging and Noise Examination}

We wish to try different Averaging strategies to reduce noise. One such strategy would be to break up the data into $N$ chunks and average over the Fourier transform of the chunks to produce a new data set of $N$ points. We would then simply follow the previous steps as with the first section to perform the Fourier transform of the data and plot.

Consider the following method: We have $2^{16}$ data points after truncation so if we divide into $2^N$ chunks where $N\inN$ we won't have any segmentation errors. To do this, consider the following code

\lstinputlisting{Q7.m}

We started by choosing the amount of chunks to divide the data into and then creating index vectors to identify the elements of these array chunks. We did the end points manually as indexing issues can occur. Next calculate the Fourier transform of these chunks and then average over the chunks to produce our new data set of length $N$.

\lstinputlisting{Q8.m}

Following from the previous code then gives us our plot. FIG \ref{fig3} and FIG \ref{fig4} which are the plots for 8 and 16 ensembles respectively.

  \begin{figure}
    \includegraphics[width=\columnwidth]{3}
    \caption{Ball Power Spectra Averaged over 8 Chunks}
    \label{fig3}
  \end{figure}

  \begin{figure}
    \includegraphics[width=\columnwidth]{4}
    \caption{Ball Power Spectra Averaged over 16 Chunks}
    \label{fig4}
  \end{figure}

  Another such strategy instead would be to take every $2^N$ data points i.e. originally we had a step size of 1 but now we change it to $2^N$ and then average over the produced slices. For instance we can take every eighth point in the data stream, Fourier transform this data and then increment to the next line of data and average. This is demonstrated below for the case of taking every eighth point.

  \lstinputlisting{Q9.m}

  We then follow the previous code to produce FIG \ref{fig5} for a step size of 8 and FIG \ref{fig6} for a step size of 16.
  
  \begin{figure}
    \includegraphics[width=\columnwidth]{5}
    \caption{Ball Power Spectra Averaged over 8 Slices}
    \label{fig5}
  \end{figure}
  
  \begin{figure}
    \includegraphics[width=\columnwidth]{6}
    \caption{Ball Power Spectra Averaged over 16 Slices}
    \label{fig6}
  \end{figure}

  If we overlay FIG \ref{fig5} with FIG \ref{fig2} to produce FIG \ref{fig7}. It is easy to see that our averaging process has reduced the noise (the right noisy arm of the data from FIG \ref{fig2} disappears when we average) and that we still don't sample frequencies past the nyquist frequency.

  \begin{figure}
    \includegraphics[width=\columnwidth]{7}
    \caption{Ball Power Spectra no window overlayed with averaging of 8 slices}
    \label{fig7}
  \end{figure}

  So we have shown two strategies for reducing noise and the second strategy is clearly more favourable as it reduces the noise whilst still retaining the same waveform structure as the original waveform.
  

\section{Examining Different Windows}

We wish to now apply some window functions to our data and then proceed via the same computation as the previous part. The window functions are essentially bump functions that will act to reduce the values of the data on the edges and hence smooth out the data. For instance, the Hann window function may be expressed mathematically as

\begin{align*}
  w(n)=\frac{1}{2}\qty(1-\cos\qty(\frac{2\pi n}{N-1}))
\end{align*}

Where $N$ is the total number of points and $n\inN$ such that $1\leq n\leq N$. This function is bounded such that $0<w(n)<1$ with the maximum value of the function occurring in the region near $n=N/2$ and the function decreases similar to a Gaussian from this maximum.

This will produce an effect on the noise of the data which we will then compare to the first section in which no window was taken. Using Matlab's inbuilt window functions Hamming and Hann respectively like so.

\lstinputlisting{Q5.m}

This creates vectors containing our bump functions values which we then multiply against our data as shown above. Apply the same code as above to get the power spectra of each window, as shown in FIG \ref{fig2}, FIG \ref{fig8} and FIG \ref{fig9}

\begin{figure}
    \includegraphics[width=\columnwidth]{8}
    \caption{Ball Power Spectra for the Hamming window}
    \label{fig8}
\end{figure}

\begin{figure}
    \includegraphics[width=\columnwidth]{9}
    \caption{Ball Power Spectra for the Hann window}
    \label{fig9}
\end{figure}
  
We can hence see that applying these windows has reduced the noise of the data near the centre of the graph but has also resulted in the total amplitude of each point on the graph being reduced (the y axis scale has gone down in an orders of magnitude).

The signals waveform has also changed from a wide peak to a more narrow pulse with the dominant frequencies being at the centre of the signal. We can hence assert that the edges of the signal are likely noise and the actual measurement occurs in the centre of the signal as that is the dominant frequency that doesn't get smoothed out by the windows.

It is also worth noting that the windowed plots still do not sample frequencies greater then the nyquist frequency.

\section{Artifacts and Leakage}

We want to consider if leakage is present in our power spectra. To examine these effects we will refer back to our graphs from the previous parts. We can see the affects of leakage in the windowed plots FIG \ref{fig8} and FIG \ref{fig9} where the windows increase the noise of the noisy arm from FIG \ref{fig2}.

We can however consider these frequencies unimportant due to the mathematics of the Fourier transform for the following reason. We have seen in the ``Averaging and Noise'' section of the report that the ``noisy arm'' of the data from FIG \ref{fig2} was removed when we averaged over an ensemble or over copies of the system.

Statistical mechanics tells us that this noise should be removed when we average over an ensemble and since the noisy arm was removed, we can deem the noisy arm to aliased frequencies.

hence when we look at the windowed function plots and see the heavily aliased frequencies due to the leakage of frequencies. We can deem these elements to be spurious. This of course applies to both window functions as both exhibit  leakage of frequencies from the noisy right arm.

\section{Conclusion}

We have calculated the Fourier transform of the bouncing ball data and have identified the dominant frequencies which occur near the centre of the waveform. This has been supported by the evidence of the averaging methods and windowed which helped to remove noise and smooth out non dominant frequencies. As to allow us to identify the main frequency, which as we said, occurred near the centre of the waveform.

\appendix
\section{Full Code}
\lstinputlisting{Assignment_Fourier_3.m}

\end{document}

% \bibliography{basename of .bib file}

%%% Local Variables:
%%% mode: latex
%%% TeX-master: t
%%% End:
