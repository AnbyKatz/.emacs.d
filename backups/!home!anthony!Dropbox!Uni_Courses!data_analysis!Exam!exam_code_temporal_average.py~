#!/usr/bin/python3.5

import matplotlib.pyplot as pypl
import numpy as np
import math as m
from scipy.integrate import quad
from matplotlib import rc
from pylab import*
from sympy import*

# Fourier Analysis of data
# Data
N_2000 = 8784
raw_data = np.array(genfromtxt("exam_data.csv",delimiter=','))
data = np.array(raw_data[N_2000+1:len(raw_data)-1,:])
Moon_Period = 27.3
Moon_freq = 1/Moon_Period

titles = ["sea level","water temp",
          "air temp","bar pressure",
          "residuals", "adj residuals",
          "wind direction","wind gust",
          "wind speed"]
            
## ---------------------------------------------------

##                  Variable Parameters

## ---------------------------------------------------

N_tot = 2**14
N = N_tot

Multi_Peak_Display = False

# Popular Input for a moving average
# Average Power Spectra
        
# Enter which plots to display using below legend key
# 0 - Sea Level
# 1 - Water Temp
# 2 - Air temp
# 3 - Bar Pressure
# 4 - Residuals
# 5 - Adj Residuals
# 6 - Wind Direction
# 7 - Wind Gust
# 8 - Wind Speed

Plots = [0] #,3,4,5,7,8]

## ---------------------------------------------------

##                     Code Below

## ---------------------------------------------------

#hann_1 =  np.array([(1/2)*(1-cos((2*m.pi*kk)/(N-1))) \
#             for kk in range(N)])

fs = 24/step_size
f = (fs*np.linspace(0,N-1,N))/N
    
for ii in range(0,len(Plots)):
    ii = Plots[ii]    
    input_data = data[0:N_tot,ii]                         
    fft_input=np.fft.fft(input_data)
    input_power=(np.square(np.absolute(fft_input)))
    pypl.loglog(f,input_power,label=titles[ii])         

##---------------------------------------------------------------

pypl.xlabel("frequency")
pypl.ylabel("Power Spectra")
pypl.grid()
pypl.axvline(x=fs/N,label="min freq",c='black')
pypl.axvline(x=Moon_freq,label="Moon Freq",c='black')

if Multi_Peak_Display == True:
    pypl.axvline(x=Moon_freq*2,label="Moon Freq",c='black')
    pypl.axvline(x=Moon_freq*3,label="Moon Freq",c='black')
    pypl.axvline(x=Moon_freq*4,label="Moon Freq",c='black')
    pypl.axvline(x=Moon_freq*5,label="Moon Freq",c='black')

pypl.axvline(x=fs/2,label="Niquist Freq",c='black')
pypl.legend()
pypl.show()

## -----------------------------------------------------------
## -----------------------------------------------------------
## -----------------------------------------------------------
